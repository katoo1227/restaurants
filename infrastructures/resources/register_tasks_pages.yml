# Lambda
LambdaRegisterTasksPages:
    Type: "AWS::Serverless::Function"
    Properties:
        CodeUri: "./lambda_functions/register_tasks_pages/"
        FunctionName: !If
            - "IsProd"
            - "RestaurantsRegisterTasksPagesProd"
            - "RestaurantsRegisterTasksPagesDev"
        Role: !GetAtt "IamRoleRegisterTasksPages.Arn"
        Runtime: "python3.12"
        Layers:
            - !Ref "LambdaLayerDbClient"
        Environment:
            Variables:
                ENV: !Ref "EnvironmentType"
                SAKURA_DATABASE_API_KEY_PATH: !Ref "ParameterStoreNameSakuraDatabaseApiKey"
                SAKURA_DATABASE_API_URL: !Ref "SakuraDatabaseApiUrl"
                ARN_LAMBDA_ERROR_COMMON: !GetAtt "LambdaErrorCommon.Arn"
                ARN_LAMBDA_HANDLER_SCHEDULES: !GetAtt "LambdaHandlerSchedules.Arn"
                ARN_LAMBDA_SCRAPING_ABSTRACT: !GetAtt "LambdaScrapingAbstract.Arn"
                ARN_IAM_ROLE_INVOKE_SCRAPING_ABSTRACT: !GetAtt "IamRoleInvokeScrapingAbstract.Arn"
                NAME_TASK_SCRAPING_ABSTRACT: !Ref "TaskNameScrapingAbstract"
        Handler: "app.lambda_handler"
        Architectures:
            - "arm64"
        Timeout: 30

        Events:
            EventBridgeScheduleLambdaRegisterTasksPages:
                Type: "ScheduleV2"
                Properties:
                    ScheduleExpression: cron(0 0 1 * ? *)
                    ScheduleExpressionTimezone: "Asia/Tokyo"
                    State: ENABLED
                    GroupName: !Ref "EventBridgeScheduleGroup"
                    Name: !If
                        - "IsProd"
                        - "RegisterTasksPagesProd"
                        - "RegisterTasksPagesDev"
                    RoleArn: !GetAtt "IamRoleInvokeRegisterTasksPages.Arn"
                    Input: '{"service_area_code": "SA41"}'

# IAMロール
IamRoleRegisterTasksPages:
    Type: "AWS::IAM::Role"
    Properties:
        RoleName: !If
            - "IsProd"
            - "RestaurantsRegisterTasksPagesProd"
            - "RestaurantsRegisterTasksPagesDev"
        AssumeRolePolicyDocument:
            Version: "2012-10-17"
            Statement:
                - Effect: "Allow"
                  Principal:
                      Service: "lambda.amazonaws.com"
                  Action: "sts:AssumeRole"

# IAMポリシー
IamPolicyRegisterTasksPages:
    Type: "AWS::IAM::Policy"
    Properties:
        PolicyName: !If
            - "IsProd"
            - "RestaurantsRegisterTasksPagesProd"
            - "RestaurantsRegisterTasksPagesDev"
        PolicyDocument:
            Version: "2012-10-17"
            Statement:
                - Effect: "Allow"
                  Action:
                      - "ssm:GetParameter"
                  Resource:
                      - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${ParameterStoreNameSakuraDatabaseApiKey}"
                - Effect: "Allow"
                  Action:
                      - "lambda:InvokeFunction"
                  Resource:
                      - !GetAtt "LambdaErrorCommon.Arn"
                      - !GetAtt "LambdaHandlerSchedules.Arn"
        Roles:
            - !Ref "IamRoleRegisterTasksPages"

# IAMロール
IamRoleInvokeRegisterTasksPages:
    Type: "AWS::IAM::Role"
    Properties:
        RoleName: !If
            - "IsProd"
            - "RestaurantsInvokeRegisterTasksPagesProd"
            - "RestaurantsInvokeRegisterTasksPagesDev"
        AssumeRolePolicyDocument:
            Version: "2012-10-17"
            Statement:
                - Effect: "Allow"
                  Principal:
                      Service: "scheduler.amazonaws.com"
                  Action: "sts:AssumeRole"

# IAMポリシー
IamPolicyInvokeRegisterTasksPages:
    Type: "AWS::IAM::Policy"
    Properties:
        PolicyName: !If
            - "IsProd"
            - "RestaurantsInvokeRegisterTasksPagesProd"
            - "RestaurantsInvokeRegisterTasksPagesDev"
        PolicyDocument:
            Version: "2012-10-17"
            Statement:
                - Effect: "Allow"
                  Action:
                      - "lambda:InvokeFunction"
                  Resource: !GetAtt "LambdaRegisterTasksPages.Arn"
        Roles:
            - !Ref "IamRoleInvokeRegisterTasksPages"
