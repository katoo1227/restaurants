# Lambda
LambdaScrapingAbstract:
    Type: "AWS::Serverless::Function"
    Properties:
        CodeUri: "./lambda_functions/scraping_abstract/"
        FunctionName: !If
            - "IsProd"
            - "RestaurantsScrapingAbstractProd"
            - "RestaurantsScrapingAbstractDev"
        Role: !GetAtt "IamRoleScrapingAbstract.Arn"
        Runtime: "python3.12"
        Layers:
            - !Ref "LambdaLayerDbClient"
            - !Ref "LambdaLayerRequests"
        Environment:
            Variables:
                ENV: !Ref "EnvironmentType"
                SAKURA_DATABASE_API_KEY_PATH: !Ref "ParameterStoreNameSakuraDatabaseApiKey"
                SAKURA_DATABASE_API_URL: !Ref "SakuraDatabaseApiUrl"
                ARN_LAMBDA_ERROR_COMMON: !GetAtt "LambdaErrorCommon.Arn"
                ARN_LAMBDA_HANDLER_SCHEDULES: !GetAtt "LambdaHandlerSchedules.Arn"
                ARN_LAMBDA_SCRAPING_DETAIL: !GetAtt "LambdaScrapingDetail.Arn"
                ARN_IAM_ROLE_INVOKE_SCRAPING_DETAIL: !GetAtt "IamRoleInvokeScrapingDetail.Arn"
                NAME_TASK_SCRAPING_ABSTRACT: !Ref "TaskNameScrapingAbstract"
                NAME_TASK_SCRAPING_DETAIL: !Ref "TaskNameScrapingDetail"
                NAME_BUCKET_IMAGES: !Ref "S3Images"
        Handler: "app.lambda_handler"
        Architectures:
            - "arm64"
        Timeout: 120

# IAMロール
IamRoleScrapingAbstract:
    Type: "AWS::IAM::Role"
    Properties:
        RoleName: !If
            - "IsProd"
            - "RestaurantsScrapingAbstractProd"
            - "RestaurantsScrapingAbstractDev"
        AssumeRolePolicyDocument:
            Version: "2012-10-17"
            Statement:
                - Effect: "Allow"
                  Principal:
                      Service: "lambda.amazonaws.com"
                  Action: "sts:AssumeRole"

# IAMポリシー
IamPolicyScrapingAbstract:
    Type: "AWS::IAM::Policy"
    Properties:
        PolicyName: !If
            - "IsProd"
            - "RestaurantsScrapingAbstractProd"
            - "RestaurantsScrapingAbstractDev"
        PolicyDocument:
            Version: "2012-10-17"
            Statement:
                - Effect: "Allow"
                  Action:
                      - "ssm:GetParameter"
                  Resource:
                      - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${ParameterStoreNameSakuraDatabaseApiKey}"
                - Effect: "Allow"
                  Action:
                      - "lambda:InvokeFunction"
                  Resource:
                      - !GetAtt "LambdaErrorCommon.Arn"
                      - !GetAtt "LambdaHandlerSchedules.Arn"
                - Effect: "Allow"
                  Action:
                      - "s3:ListBucket"
                  Resource: !Sub "arn:aws:s3:::${S3Images}"
                - Effect: "Allow"
                  Action:
                      - "s3:PutObject"
                      - "s3:DeleteObject"
                  Resource: !Sub "arn:aws:s3:::${S3Images}/thumbnails/*"
        Roles:
            - !Ref "IamRoleScrapingAbstract"

# IAMロール
IamRoleInvokeScrapingAbstract:
    Type: "AWS::IAM::Role"
    Properties:
        RoleName: !If
            - "IsProd"
            - "RestaurantsInvokeScrapingAbstractProd"
            - "RestaurantsInvokeScrapingAbstractDev"
        AssumeRolePolicyDocument:
            Version: "2012-10-17"
            Statement:
                - Effect: "Allow"
                  Principal:
                      Service: "scheduler.amazonaws.com"
                  Action: "sts:AssumeRole"

# IAMポリシー
IamPolicyInvokeScrapingAbstract:
    Type: "AWS::IAM::Policy"
    Properties:
        PolicyName: !If
            - "IsProd"
            - "RestaurantsInvokeScrapingAbstractProd"
            - "RestaurantsInvokeScrapingAbstractDev"
        PolicyDocument:
            Version: "2012-10-17"
            Statement:
                - Effect: "Allow"
                  Action:
                      - "lambda:InvokeFunction"
                  Resource: !GetAtt "LambdaScrapingAbstract.Arn"
        Roles:
            - !Ref "IamRoleInvokeScrapingAbstract"