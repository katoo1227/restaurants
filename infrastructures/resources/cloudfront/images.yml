# OAC
CloudfrontOriginAccessControlImages:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
        OriginAccessControlConfig:
            Name: !If
                - "IsProd"
                - "RestaurantsImagesProd"
                - "RestaurantsImagesDev"
            OriginAccessControlOriginType: "s3"
            SigningBehavior: "always"
            SigningProtocol: "sigv4"

# リファラー制限関数
CloudfrontFunctionImagesReferer:
    Type : "AWS::CloudFront::Function"
    Properties:
        Name: !If
            - "IsProd"
            - "RestaurantsImagesProd"
            - "RestaurantsImagesDev"
        AutoPublish: true
        FunctionCode: !Sub |
            function handler(event) {
                const errorResponse = {
                    statusCode: 403,
                    statusDescription: 'Forbidden',
                    headers: {
                        'content-type': [{ key: 'Content-Type', value: 'text/plain' }],
                    },
                    body: 'Access denied',
                }

                // 許可されたリファラー
                const allowReferers = [
                    {{replace_images_access_referers}}
                ];

                const request = event.request;

                // リファラーがなければエラー
                const headers = request.headers;
                if (!headers || !headers.hasOwnProperty('referer')) {
                    return errorResponse;
                }

                // リファラーが不正であればエラー
                const referer = request.headers['referer']['value'];
                if (!allowReferers.includes(referer)) {
                    return errorResponse
                }

                return request;
            }
        FunctionConfig:
            Comment: !If
                - "IsProd"
                - "RestaurantsProd"
                - "RestaurantsDev"
            Runtime: "cloudfront-js-2.0"


# ディストリビューション
CloudfrontImagesDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
        DistributionConfig:
            Aliases:
                - !If
                    - "IsProd"
                    - !Sub "restaurants-images.${Domain}"
                    - !Sub "restaurants-images-dev.${Domain}"
            DefaultCacheBehavior:
                AllowedMethods:
                    - "GET"
                    - "HEAD"
                # CachingOptimizedを選択。固定値。
                CachePolicyId: "658327ea-f89d-4fab-a63d-7e88639e58f6"
                Compress: true
                TargetOriginId: "S3Origin"
                ViewerProtocolPolicy: "https-only"
                FunctionAssociations:
                    - EventType: "viewer-request"
                      FunctionARN: !GetAtt "CloudfrontFunctionImagesReferer.FunctionMetadata.FunctionARN"
            DefaultRootObject: "index.html"
            Enabled: true
            HttpVersion: "http2and3"
            IPV6Enabled: true
            Origins:
                - Id: "S3Origin"
                  DomainName: !Sub "${S3Images}.s3.${AWS::Region}.amazonaws.com"
                  S3OriginConfig: {}
                  OriginAccessControlId: !Ref "CloudfrontOriginAccessControlImages"
            ViewerCertificate:
                # バージニア北部のSSL証明書
                AcmCertificateArn: !Ref "ArnAcmSslCertficateUsEast"
                SslSupportMethod: "sni-only"