# OAC
CloudfrontOriginAccessControlFrontend:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
        OriginAccessControlConfig:
            Name: !If
                - "IsProd"
                - "RestaurantsProd"
                - "RestaurantsDev"
            OriginAccessControlOriginType: "s3"
            SigningBehavior: "always"
            SigningProtocol: "sigv4"

# Basic認証用関数
CloudfrontFunctionFrontendBasicAuthorization:
    Type : "AWS::CloudFront::Function"
    Properties:
        Name: !If
            - "IsProd"
            - "RestaurantsProd"
            - "RestaurantsDev"
        AutoPublish: true
        FunctionCode: !Sub |
            function handler(event) {
                const request = event.request;
                const headers = request.headers;

                const authString = "Basic ${FrontendBasicAuthorization}";

                if (
                    typeof headers.authorization === "undefined" ||
                    headers.authorization.value !== authString
                ) {
                    return {
                    statusCode: 401,
                    statusDescription: "Unauthorized",
                    headers: {
                        "www-authenticate": {
                            value: "Basic"
                        },
                    },
                    };
                }

                return request;
            }
        FunctionConfig:
            Comment: !If
                - "IsProd"
                - "RestaurantsProd"
                - "RestaurantsDev"
            Runtime: "cloudfront-js-2.0"


# ディストリビューション
CloudfrontFrontendDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
        DistributionConfig:
            Aliases:
                - !If
                    - "IsProd"
                    - !Sub "restaurants.${Domain}"
                    - !Sub "restaurants-dev.${Domain}"
            DefaultCacheBehavior:
                AllowedMethods:
                    - "GET"
                    - "HEAD"
                # CachingOptimized
                CachePolicyId: "658327ea-f89d-4fab-a63d-7e88639e58f6"
                Compress: true
                TargetOriginId: "S3Origin"
                ViewerProtocolPolicy: "https-only"
                FunctionAssociations:
                    - EventType: "viewer-request"
                      FunctionARN: !GetAtt "CloudfrontFunctionFrontendBasicAuthorization.FunctionMetadata.FunctionARN"
            DefaultRootObject: "index.html"
            Enabled: true
            HttpVersion: "http2and3"
            IPV6Enabled: true
            Origins:
                - Id: "S3Origin"
                  DomainName: !Sub "${S3Frontend}.s3.${AWS::Region}.amazonaws.com"
                  S3OriginConfig: {}
                  OriginAccessControlId: !Ref "CloudfrontOriginAccessControlFrontend"
            ViewerCertificate:
                # バージニア北部のSSL証明書
                AcmCertificateArn: !Ref "ArnAcmSslCertficateUsEast"
                SslSupportMethod: "sni-only"